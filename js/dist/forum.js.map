{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@foskym/flarum-sorts-for-user-directory/webpack/bootstrap","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/compat get default export","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/define property getters","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/hasOwnProperty shorthand","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/app']\"","webpack://@foskym/flarum-sorts-for-user-directory/./src/common/index.ts","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['forum/app']\"","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/extend']\"","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@foskym/flarum-sorts-for-user-directory/./src/forum/index.tsx","webpack://@foskym/flarum-sorts-for-user-directory/./src/common/addSort.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('foskym/flarum-sorts-for-user-directory', () => {\n  console.log('[foskym/flarum-sorts-for-user-directory] Hello, forum and admin!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import app from 'flarum/forum/app';\nimport { override, extend } from 'flarum/common/extend';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport icon from 'flarum/common/helpers/icon';\n\nimport addSort from '../common/addSort';\n\napp.initializers.add('foskym/flarum-sorts-for-user-directory', () => {\n  extend(UserCard.prototype, 'infoItems', function (items) {\n    const user = this.attrs.user;\n    if (!user) return;\n    if (!app.forum.attribute('foskym-sorts-for-user-directory.sort_by_monthly_posts')) return;\n    items.add(\n      'monthly-discussion-count',\n      <span className=\"UserCard-MonthlyDiscussionCount\">\n        {[\n          icon('fas fa-comment'),\n          ' ',\n          app.translator.trans('foskym-sorts-for-user-directory.forum.user_card.monthly_discussions', {\n            count: user.data.attributes.monthlyDiscussionCount,\n          }),\n        ]}\n      </span>,\n      70\n    );\n    items.add(\n      'monthly-comment-count',\n      <span className=\"UserCard-MonthlyCommentCount\">\n        {[\n          icon('fas fa-comments'),\n          ' ',\n          app.translator.trans('foskym-sorts-for-user-directory.forum.user_card.monthly_comments', {\n            count: user.data.attributes.monthlyCommentCount,\n          }),\n        ]}\n      </span>,\n      70\n    );\n  });\n\n  if ('fof-user-directory' in flarum.extensions) {\n    const UserDirectoryState = flarum.extensions['fof-user-directory']?.UserDirectoryState as any;\n    const originalSortMap = UserDirectoryState.prototype.sortMap();\n    override(UserDirectoryState.prototype, 'loadResults', function (original, offset) {\n      const sort = this.params.sort || 'default';\n      if (sort !== app.forum.attribute('userDirectoryDefaultSort') && !(sort in originalSortMap)) {\n        const params = this.requestParams();\n        params.page = { offset };\n        params.include = params.include.join(',');\n\n        return this.app.store.find('users', params);\n      }\n\n      return original(offset);\n    });\n    override(UserDirectoryState.prototype, 'sortMap', function (original) {\n      let map = original();\n      map = addSort(map);\n      return map;\n    });\n  }\n});\n","import app from 'flarum/common/app';\r\n\r\nexport default function addSort(map: any, isAdmin = false) {\r\n  const sortTypes: any = {\r\n    core: [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_monthly_posts',\r\n        map: {\r\n          most_monthly_discussions: '-monthly_discussion_count',\r\n          most_monthly_comments: '-monthly_comment_count',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_groups_count',\r\n        map: {\r\n          most_groups_count: '-groups_count',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_recently_seen',\r\n        map: {\r\n          recently_seen: '-last_seen_at',\r\n          least_recently_seen: 'last_seen_at',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_comments',\r\n        map: {\r\n          most_comments: '-comment_count',\r\n          least_comments: 'comment_count',\r\n        }\r\n      },\r\n    ],\r\n    'flarum-nicknames': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_nickname',\r\n        map: {\r\n          nickname_az: 'nickname',\r\n          nickname_za: '-nickname',\r\n        },\r\n      },\r\n    ],\r\n    'antoinefr-money': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_money',\r\n        map: {\r\n          most_money: '-money',\r\n          least_money: 'money',\r\n        },\r\n      },\r\n    ],\r\n    'clarkwinkelmann-likes-received': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_likes_received',\r\n        map: {\r\n          most_likes_received: '-clarkwinkelmann_likes_received_count',\r\n          least_likes_received: 'clarkwinkelmann_likes_received_count',\r\n        },\r\n      },\r\n    ],\r\n    'ziiven-daily-check-in': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_ziven_checkin',\r\n        map: {\r\n          recently_checkin: '-last_checkin_time',\r\n          most_total_checkin: '-total_checkin_count',\r\n          most_total_continuous_checkin: '-total_continuous_checkin_count',\r\n        },\r\n      },\r\n    ],\r\n    'xypp-invite-user': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_invited_user',\r\n        map: {\r\n          most_invited_user: '-invited_user',\r\n        },\r\n      },\r\n    ],\r\n    'v17development-user-badges': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_badges_count',\r\n        map: {\r\n          most_badges_count: '-badges_count',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  for (const sortType in sortTypes) {\r\n    for (const sort of sortTypes[sortType]) {\r\n      if (sortType !== 'core' && sortType in flarum.extensions) {\r\n        continue;\r\n      }\r\n      const enabled = isAdmin ? app.data.settings[sort.key] : app.forum.attribute(sort.key);\r\n      if (enabled) {\r\n        for (const key in sort.map) {\r\n          map[key] = sort.map[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return map;\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","console","log","extend","UserCard","items","user","this","attrs","attribute","m","className","icon","trans","count","data","attributes","monthlyDiscussionCount","monthlyCommentCount","extensions","_flarum$extensions$fo","UserDirectoryState","originalSortMap","sortMap","override","original","offset","sort","params","requestParams","page","include","join","store","find","map","isAdmin","sortTypes","most_monthly_discussions","most_monthly_comments","most_groups_count","recently_seen","least_recently_seen","most_comments","least_comments","nickname_az","nickname_za","most_money","least_money","most_likes_received","least_likes_received","recently_checkin","most_total_checkin","most_total_continuous_checkin","most_invited_user","most_badges_count","sortType","_step","_iterator","_createForOfIteratorHelperLoose","done","value","settings","addSort"],"sourceRoot":""}