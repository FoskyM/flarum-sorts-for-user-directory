{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@foskym/flarum-sorts-for-user-directory/webpack/bootstrap","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/compat get default export","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/define property getters","webpack://@foskym/flarum-sorts-for-user-directory/webpack/runtime/hasOwnProperty shorthand","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/app']\"","webpack://@foskym/flarum-sorts-for-user-directory/./src/common/index.ts","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['admin/app']\"","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/extend']\"","webpack://@foskym/flarum-sorts-for-user-directory/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@foskym/flarum-sorts-for-user-directory/./src/admin/index.tsx","webpack://@foskym/flarum-sorts-for-user-directory/./src/common/addSort.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('foskym/flarum-sorts-for-user-directory', () => {\n  console.log('[foskym/flarum-sorts-for-user-directory] Hello, forum and admin!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","import app from 'flarum/admin/app';\nimport { override } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nimport addSort from '../common/addSort';\nconst SortMap = flarum.extensions['fof-user-directory']?.SortMap as any;\noverride(SortMap.prototype, 'sortMap', function (original)  {\n  let map = original();\n  map = addSort(map, true);\n  return map;\n});\n\napp.initializers.add('foskym/flarum-sorts-for-user-directory', () => {\n\n\n  app.extensionData\n    .for('foskym-sorts-for-user-directory')\n    .registerSetting(function () {\n      return (\n        <div className=\"Form-group\">\n          <label>\n            <LinkButton\n              href={app.route('extension', {\n                id: 'fof-user-directory',\n              })}\n            >\n              {app.translator.trans('foskym-sorts-for-user-directory.admin.go_to_user_directory_extension')}\n            </LinkButton>\n          </label>\n        </div>\n      );\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_nickname',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_nickname'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_monthly_posts',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_monthly_posts'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_groups_count',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_groups_count'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_money',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_money'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_likes_received',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_likes_received'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_recently_seen',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_recently_seen'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_comments',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_comments'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_ziven_checkin',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_ziven_checkin'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_invited_user',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_invited_user'),\n      type: 'boolean',\n    })\n    .registerSetting({\n      setting: 'foskym-sorts-for-user-directory.sort_by_badges_count',\n      label: app.translator.trans('foskym-sorts-for-user-directory.admin.settings.sort_by_badges_count'),\n      type: 'boolean',\n    });\n\n  app.extensionData.for('fof-user-directory').registerSetting(function () {\n    return (\n      <div className=\"Form-group\">\n        <label>\n          <LinkButton\n            href={app.route('extension', {\n              id: 'foskym-sorts-for-user-directory',\n            })}\n          >\n            {app.translator.trans('foskym-sorts-for-user-directory.admin.go_to_this_extension')}\n          </LinkButton>\n        </label>\n      </div>\n    );\n  });\n});\n","import app from 'flarum/common/app';\r\n\r\nexport default function addSort(map: any, isAdmin = false) {\r\n  const sortTypes: any = {\r\n    core: [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_monthly_posts',\r\n        map: {\r\n          most_monthly_discussions: '-monthly_discussion_count',\r\n          most_monthly_comments: '-monthly_comment_count',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_groups_count',\r\n        map: {\r\n          most_groups_count: '-groups_count',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_recently_seen',\r\n        map: {\r\n          recently_seen: '-last_seen_at',\r\n          least_recently_seen: 'last_seen_at',\r\n        }\r\n      },\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_comments',\r\n        map: {\r\n          most_comments: '-comment_count',\r\n          least_comments: 'comment_count',\r\n        }\r\n      },\r\n    ],\r\n    'flarum-nicknames': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_nickname',\r\n        map: {\r\n          nickname_az: 'nickname',\r\n          nickname_za: '-nickname',\r\n        },\r\n      },\r\n    ],\r\n    'antoinefr-money': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_money',\r\n        map: {\r\n          most_money: '-money',\r\n          least_money: 'money',\r\n        },\r\n      },\r\n    ],\r\n    'clarkwinkelmann-likes-received': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_likes_received',\r\n        map: {\r\n          most_likes_received: '-clarkwinkelmann_likes_received_count',\r\n          least_likes_received: 'clarkwinkelmann_likes_received_count',\r\n        },\r\n      },\r\n    ],\r\n    'ziiven-daily-check-in': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_ziven_checkin',\r\n        map: {\r\n          recently_checkin: '-last_checkin_time',\r\n          most_total_checkin: '-total_checkin_count',\r\n          most_total_continuous_checkin: '-total_continuous_checkin_count',\r\n        },\r\n      },\r\n    ],\r\n    'xypp-invite-user': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_invited_user',\r\n        map: {\r\n          most_invited_user: '-invited_user',\r\n        },\r\n      },\r\n    ],\r\n    'v17development-user-badges': [\r\n      {\r\n        key: 'foskym-sorts-for-user-directory.sort_by_badges_count',\r\n        map: {\r\n          most_badges_count: '-badges_count',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  for (const sortType in sortTypes) {\r\n    for (const sort of sortTypes[sortType]) {\r\n      if (sortType !== 'core' && sortType in flarum.extensions) {\r\n        continue;\r\n      }\r\n      const enabled = isAdmin ? app.data.settings[sort.key] === '1' : app.forum.attribute(sort.key);\r\n      if (enabled) {\r\n        for (const key in sort.map) {\r\n          map[key] = sort.map[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return map;\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","console","log","SortMap","_flarum$extensions$fo","extensions","override","original","map","isAdmin","sortTypes","most_monthly_discussions","most_monthly_comments","most_groups_count","recently_seen","least_recently_seen","most_comments","least_comments","nickname_az","nickname_za","most_money","least_money","most_likes_received","least_likes_received","recently_checkin","most_total_checkin","most_total_continuous_checkin","most_invited_user","most_badges_count","sortType","_step","_iterator","_createForOfIteratorHelperLoose","done","sort","value","settings","attribute","addSort","registerSetting","m","className","LinkButton","href","id","trans","setting","label","type"],"sourceRoot":""}